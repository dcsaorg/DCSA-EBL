{
  "type": "array",
  "items": {
    "required": [
      "carrierCode",
      "carrierCodeListProvider",
      "issuingParty",
      "shippingInstructionReference",
      "transportDocumentReference"
    ],
    "type": "object",
    "description": "A 'shallow' representation of the Transport Document. This version of the Transport Document does not contain nested objects. For a 'rich' version of the Transport Document please use the `GET` endPoint.\n",
    "properties": {
      "transportDocumentReference": {
        "maxLength": 20,
        "type": "string",
        "description": "A unique number allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.\n"
      },
      "transportDocumentCreatedDateTime": {
        "type": "string",
        "description": "Date and time when the TransportDocument was created\n",
        "format": "date-time"
      },
      "transportDocumentUpdatedDateTime": {
        "type": "string",
        "description": "Date and time when the TransportDocument was updated\n",
        "format": "date-time"
      },
      "issueDate": {
        "type": "string",
        "description": "Date when the transport document has been issued",
        "format": "date"
      },
      "shippedOnBoardDate": {
        "type": "string",
        "description": "Date when the last container that is linked to the transport document is physically loaded onboard the vessel indicated on the transport document.",
        "format": "date"
      },
      "receivedForShipmentDate": {
        "type": "string",
        "description": "Date when the last container linked to the transport document is physically in the terminal (customers cleared against the intended vessel).",
        "format": "date"
      },
      "numberOfOriginals": {
        "type": "integer",
        "description": "Number of original copies of the negotiable bill of lading that has been issued to the customer.\n",
        "format": "int32",
        "minimum": -2147483648,
        "maximum": 2147483647
      },
      "carrierCode": {
        "maxLength": 4,
        "type": "string",
        "description": "The code containing the SCAC and/or the SMDG code to specify the issuing carrier.  Details about the issuer can be given in the Document Parties entity using the party function code MS.\n"
      },
      "carrierCodeListProvider": {
        "type": "string",
        "description": "The provider used for identifying the issuer Code\n",
        "enum": [
          "SMDG",
          "NMFTA"
        ]
      },
      "issuingParty": {
        "required": [
          "partyContactDetails"
        ],
        "type": "object",
        "description": "refers to a company or a legal entity.",
        "properties": {
          "partyName": {
            "maxLength": 100,
            "type": "string",
            "description": "Name of the party."
          },
          "taxReference1": {
            "maxLength": 20,
            "type": "string",
            "description": "The identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
          },
          "taxReference2": {
            "maxLength": 20,
            "type": "string",
            "description": "Optional second identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
          },
          "publicKey": {
            "maxLength": 500,
            "type": "string",
            "description": "The public key used for a digital signature."
          },
          "address": {
            "type": "object",
            "description": "An object for storing address related information\n",
            "properties": {
              "name": {
                "maxLength": 100,
                "type": "string",
                "description": "Name of the address"
              },
              "street": {
                "maxLength": 100,
                "type": "string",
                "description": "The name of the street of the party's address."
              },
              "streetNumber": {
                "maxLength": 50,
                "type": "string",
                "description": "The number of the street of the party's address."
              },
              "floor": {
                "maxLength": 50,
                "type": "string",
                "description": "The floor of the party's street number."
              },
              "postCode": {
                "maxLength": 50,
                "type": "string",
                "description": "The post code of the party's address."
              },
              "city": {
                "maxLength": 65,
                "type": "string",
                "description": "The city name of the party's address."
              },
              "stateRegion": {
                "maxLength": 65,
                "type": "string",
                "description": "The state/region of the party's address."
              },
              "country": {
                "maxLength": 75,
                "type": "string",
                "description": "The country of the party's address."
              }
            }
          },
          "partyContactDetails": {
            "minItems": 1,
            "type": "array",
            "description": "A list of contact details - the list cannot be empty\n",
            "items": {
              "required": [
                "name"
              ],
              "type": "object",
              "description": "Contact information for a Party\n",
              "properties": {
                "name": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "Name of the contact"
                },
                "phone": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Phone number for the contact"
                },
                "email": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "E-mail address for the contact"
                },
                "url": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "URL for the contact"
                }
              }
            }
          },
          "identifyingCodes": {
            "type": "array",
            "items": {
              "required": [
                "DCSAResponsibleAgencyCode",
                "partyCode"
              ],
              "type": "object",
              "properties": {
                "DCSAResponsibleAgencyCode": {
                  "type": "string",
                  "description": "A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:\n- ISO (International Standards Organization)\n- UNECE (United Nations Economic Commission for Europe)\n- LLOYD (Lloyd's register of shipping)\n- BIC (Bureau International des Containeurs)\n- IMO (International Maritime Organization)\n- SCAC (Standard Carrier Alpha Code)\n- ITIGG (International Transport Implementation Guidelines Group)\n- ITU (International Telecommunication Union)\n- SMDG (Shipplanning Message Development Group)\n- EXIS (Exis Technologies Ltd.)\n- FMC (Federal Maritime Commission)\n- CBSA (Canada Border Services Agency)\n- DCSA (Digital Container Shipping Association)\n- ZZZ (Mutually defined)\n\nMore details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/codelistresponsibleagencycodes.csv).\n",
                  "enum": [
                    "ISO",
                    "UNECE",
                    "LLOYD",
                    "BIC",
                    "IMO",
                    "SCAC",
                    "ITIGG",
                    "ITU",
                    "SMDG",
                    "EXIS",
                    "FMC",
                    "CBSA",
                    "DCSA",
                    "ZZZ"
                  ]
                },
                "partyCode": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "Code to identify the party as provided by the agency\n"
                },
                "codeListName": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "The name of the list, provided by the responsible agency\n"
                }
              }
            }
          }
        }
      },
      "numberOfRiderPages": {
        "type": "integer",
        "description": "The number of additional pages required to contain the goods description on a transport document. Only applicable for physical transport documents.",
        "format": "int32",
        "minimum": -2147483648,
        "maximum": 2147483647
      },
      "shippingInstructionReference": {
        "maxLength": 100,
        "type": "string",
        "description": "The identifier for a shipping instruction provided by the carrier for system purposes.\n"
      },
      "documentStatus": {
        "type": "string",
        "description": "The status of the Bill of Lading. Possible values are:\n- RECE (Received)\n- PENU (Pending Update)\n- DRFT (Draft)\n- PENA (Pending Approval)\n- APPR (Approved)\n- ISSU (Issued)\n- SURR (Surrendered)\n- VOID (Void)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.\n",
        "enum": [
          "RECE",
          "PENU",
          "DRFT",
          "PENA",
          "APPR",
          "ISSU",
          "SURR",
          "VOID"
        ]
      },
      "carrierBookingReferences": {
        "type": "array",
        "description": "A list of all `carrierBookingReferences` used. The `carrierBookingReferences` are sourced from the `CargoItems` or the root object of the SI.\n",
        "items": {
          "maxLength": 35,
          "type": "string",
          "description": "A set of unique characters provided by carrier to identify a booking."
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-04/schema#"
}
