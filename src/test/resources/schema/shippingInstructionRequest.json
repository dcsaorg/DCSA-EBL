{
  "type": "object",
  "description": "The Shipping Instruction is an enrichment to the original booking shared by the shipper to the carrier. The shipping instruction includes volume or weight, cargo items, shipping dates, origin, destination, and other special instructions. The information given by the shipper through the shipping instruction is the information required to create a Transport Document.\n",
  "required": [
    "consignmentItems",
    "isElectronic",
    "isShippedOnboardType",
    "isToOrder",
    "utilizedTransportEquipments"
  ],
  "additionalProperties": false,
  "properties": {
    "shippingInstructionReference": {
      "maxLength": 100,
      "type": "string",
      "description": "The identifier for a shipping instruction provided by the carrier for system purposes.\n"
    },
    "amendToTransportDocument": {
      "maxLength": 20,
      "type": "string",
      "description": "This field can be used to reference a Transport Document that is issued (documentStatus = `ISSU`) in order to amend changes.\n\nThe field cannot be modified once set.\n"
    },
    "transportDocumentTypeCode": {
      "type": "string",
      "description": "Specifies the type of the transport document\n- BOL (Bill of Lading)\n- SWB (Sea Waybill)\n",
      "enum": [
        "BOL",
        "SWB"
      ]
    },
    "isShippedOnboardType": {
      "type": "boolean",
      "description": "Specifies whether the Transport document is a received for shipment, or shipped onboard."
    },
    "numberOfCopies": {
      "type": "integer",
      "description": "The requested number of copies of the Transport document to be issued by the carrier. Only applicable for physical documents"
    },
    "numberOfOriginals": {
      "type": "integer",
      "description": "Number of original copies of the negotiable bill of lading that has been requested by the customer.\n"
    },
    "isElectronic": {
      "type": "boolean",
      "description": "An indicator whether the transport document is electronically transferred."
    },
    "isToOrder": {
      "type": "boolean",
      "description": "Indicates whether the transport document is issued `to order` or not\n"
    },
    "areChargesDisplayedOnOriginals": {
      "type": "boolean",
      "description": "An indicator of whether the charges are displayed on the original documents.\n"
    },
    "areChargesDisplayedOnCopies": {
      "type": "boolean",
      "description": "An indicator of whether the charges are displayed on the copies of the documents.\n"
    },
    "displayedNameForPlaceOfReceipt": {
      "maxLength": 250,
      "type": "string",
      "description": "The address of the Party to be displayed on the transport document."
    },
    "displayedNameForPortOfLoad": {
      "maxLength": 250,
      "type": "string",
      "description": "The address of the Party to be displayed on the transport document."
    },
    "displayedNameForPortOfDischarge": {
      "maxLength": 250,
      "type": "string",
      "description": "The address of the Party to be displayed on the transport document."
    },
    "displayedNameForPlaceOfDelivery": {
      "maxLength": 250,
      "type": "string",
      "description": "The address of the Party to be displayed on the transport document."
    },
    "carrierBookingReference": {
      "maxLength": 35,
      "type": "string",
      "description": "A set of unique characters provided by carrier to identify a booking."
    },
    "placeOfIssue": {
      "type": "object",
      "description": "General purpose object to capture location-related data, the location can be specified in **any** of the following ways: `geoLocation` (lat+long), `UN Location Code`, a `Facility` or an `Address`.\n\nIf multiple ways are used - then they all have to point to the same location!\n",
      "properties": {
        "locationName": {
          "maxLength": 100,
          "type": "string",
          "description": "The name of the location."
        },
        "latitude": {
          "maxLength": 10,
          "type": "string",
          "description": "Geographic coordinate that specifies the north–south position of a point on the Earth&apos;s surface."
        },
        "longitude": {
          "maxLength": 11,
          "type": "string",
          "description": "Geographic coordinate that specifies the east–west position of a point on the Earth&apos;s surface."
        },
        "UNLocationCode": {
          "maxLength": 5,
          "type": "string",
          "description": "The UN Location code specifying where the place is located."
        },
        "facilityCode": {
          "maxLength": 6,
          "type": "string",
          "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
        },
        "facilityCodeListProvider": {
          "type": "string",
          "description": "The provider used for identifying the facility Code\n",
          "enum": [
            "BIC",
            "SMDG"
          ]
        },
        "address": {
          "description": "Address related information",
          "type": "object",
          "properties": {
            "name": {
              "maxLength": 100,
              "type": "string",
              "description": "Name of the address"
            },
            "street": {
              "maxLength": 100,
              "type": "string",
              "description": "The name of the street of the party’s address."
            },
            "streetNumber": {
              "maxLength": 50,
              "type": "string",
              "description": "The number of the street of the party’s address."
            },
            "floor": {
              "maxLength": 50,
              "type": "string",
              "description": "The floor of the party’s street number."
            },
            "postCode": {
              "maxLength": 10,
              "type": "string",
              "description": "The post code of the party’s address."
            },
            "city": {
              "maxLength": 65,
              "type": "string",
              "description": "The city name of the party’s address."
            },
            "stateRegion": {
              "maxLength": 65,
              "type": "string",
              "description": "The state/region of the party’s address."
            },
            "country": {
              "maxLength": 75,
              "type": "string",
              "description": "The country of the party’s address."
            }
          }
        }
      }
    },
    "consignmentItems": {
      "minItems": 1,
      "type": "array",
      "items": {
        "required": [
          "HSCode",
          "cargoItems",
          "descriptionOfGoods",
          "weight",
          "weightUnit"
        ],
        "type": "object",
        "description": "Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers (`UtilizedTransportEquipment`) by referencing multiple `CargoItems`\n",
        "properties": {
          "carrierBookingReference": {
            "maxLength": 35,
            "type": "string",
            "description": "A set of unique characters provided by carrier to identify a booking."
          },
          "weight": {
            "type": "number",
            "description": "The total weight of the cargo including packaging items being carried in the container(s). Excludes the tare weight of the container(s)."
          },
          "volume": {
            "type": "number",
            "description": "Calculated by multiplying the width, height, and length of the packed cargo."
          },
          "weightUnit": {
            "type": "string",
            "description": "The unit of measure which can be expressed in imperial or metric terms",
            "enum": [
              "KGM",
              "LBR"
            ]
          },
          "volumeUnit": {
            "type": "string",
            "description": "The unit of measure which can be expressed in either imperial or metric terms",
            "enum": [
              "CBM",
              "CFT"
            ]
          },
          "descriptionOfGoods": {
            "type": "string",
            "description": "The cargo description are details which accurately and properly describe the cargo being shipped in the container(s) as provided by the shipper."
          },
          "HSCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Used by customs to classify the product being shipped."
          },
          "cargoItems": {
            "minItems": 1,
            "type": "array",
            "items": {
              "required": [
                "equipmentReference",
                "numberOfPackages",
                "packageCode",
                "weight",
                "weightUnit"
              ],
              "type": "object",
              "description": "A `cargoItem` is the smallest unit used by stuffing. A `cargoItem` cannot be split across containers.",
              "properties": {
                "cargoLineItems": {
                  "type": "array",
                  "items": {
                    "required": [
                      "cargoLineItemID",
                      "shippingMarks"
                    ],
                    "type": "object",
                    "description": "identifies the specific details of packages within a cargo item.\n",
                    "properties": {
                      "cargoLineItemID": {
                        "type": "string",
                        "description": "Identifies the cargo line item (package) within the cargo. The cargo line item ID is provided by the shipper and is used to define the stuffing. Cargo line items belonging to the same cargo items are stuffed in the same container."
                      },
                      "shippingMarks": {
                        "type": "string",
                        "description": "The identifying details of a package or the actual markings that appear on the package(s). This information is provided by the shipper."
                      }
                    }
                  }
                },
                "equipmentReference": {
                  "maxLength": 15,
                  "type": "string",
                  "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.\nAccording to ISO 6346, a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit). If a container does not comply with ISO 6346, it is suggested to follow Recommendation #2 “Container with non-ISO identification” from SMDG.\n"
                },
                "weight": {
                  "type": "number",
                  "description": "The total weight of the cargo including packaging items being carried in the container(s). Excludes the tare weight of the container(s)."
                },
                "volume": {
                  "type": "number",
                  "description": "Calculated by multiplying the width, height, and length of the packed cargo."
                },
                "weightUnit": {
                  "type": "string",
                  "description": "The unit of measure which can be expressed in imperial or metric terms",
                  "enum": [
                    "KGM",
                    "LBR"
                  ]
                },
                "volumeUnit": {
                  "type": "string",
                  "description": "The unit of measure which can be expressed in either imperial or metric terms",
                  "enum": [
                    "CBM",
                    "CFT"
                  ]
                },
                "numberOfPackages": {
                  "type": "integer",
                  "description": "Specifies the number of packages associated with this cargo item"
                },
                "packageCode": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "The unique identifier for the package type"
                }
              }
            }
          },
          "references": {
            "type": "array",
            "items": {
              "required": [
                "referenceType",
                "referenceValue"
              ],
              "type": "object",
              "description": "references provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.\n",
              "properties": {
                "referenceType": {
                  "type": "string",
                  "description": "The reference type codes defined by DCSA.\n- FF (Freight Forwarder’s Reference)\n- SI (Shipper’s Reference)\n- PO (Purchase Order Reference)\n- CR (Customer’s Reference)\n- AAO (Consignee’s Reference)\n- ECR (Empty container release reference)\n- CSI (Customer shipment ID)\n- BPR (Booking party reference number)\n- BID (Booking Request ID)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv\">GitHub</a>. Be aware that the list is a subset of the possible values.\n",
                  "enum": [
                    "FF",
                    "SI",
                    "PO",
                    "CR",
                    "AAO",
                    "ECR",
                    "CSI",
                    "BPR",
                    "BID"
                  ]
                },
                "referenceValue": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "The actual value of the reference."
                }
              }
            }
          }
        }
      }
    },
    "utilizedTransportEquipments": {
      "minItems": 1,
      "type": "array",
      "items": {
        "required": [
          "cargoGrossWeight",
          "cargoGrossWeightUnit",
          "equipment",
          "isShipperOwned"
        ],
        "type": "object",
        "description": "Specifies the container (`equipment`), the total weight, the `seals` used and possible `reefer` settings\n",
        "properties": {
          "equipment": {
            "required": [
              "equipmentReference"
            ],
            "type": "object",
            "description": "used for storing cargo in/on during transport. The equipment size/type is defined by the ISO 6346 code. The most common equipment size/type is 20'/40'/45' Dry Freight Container, but several different versions exist.\n",
            "properties": {
              "equipmentReference": {
                "maxLength": 15,
                "type": "string",
                "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.\nAccording to ISO 6346, a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit). If a container does not comply with ISO 6346, it is suggested to follow Recommendation #2 “Container with non-ISO identification” from SMDG.\n"
              },
              "ISOEquipmentCode": {
                "maxLength": 4,
                "type": "string",
                "description": "Unique code for the different equipment size/type used for transporting commodities. The code is a concatenation of ISO Equipment Size Code and ISO Equipment Type Code A and follows the ISO 6346 standard."
              },
              "tareWeight": {
                "type": "number",
                "description": "The weight of an empty container (gross container weight)."
              },
              "weightUnit": {
                "type": "string",
                "description": "The unit of measure which can be expressed in imperial or metric terms",
                "enum": [
                  "KGM",
                  "LBR"
                ]
              }
            }
          },
          "cargoGrossWeightUnit": {
            "type": "string",
            "description": "The unit of measure which can be expressed in imperial or metric terms",
            "enum": [
              "KGM",
              "LBR"
            ]
          },
          "cargoGrossWeight": {
            "type": "number",
            "description": "The grand total weight of the cargo and weight per container(s) including packaging items being carried, which can be expressed in imperial or metric terms, as provided by the shipper. Excludes the tare weight of the container(s)."
          },
          "isShipperOwned": {
            "type": "boolean",
            "description": "Indicates whether the container is shipper owned (SOC)."
          },
          "activeReeferSettings": {
            "type": "object",
            "description": "specifies the settings for an active reefer container used to a shipment.",
            "properties": {
              "temperatureMin": {
                "type": "number",
                "description": "Indicates the minimum temperature setting on the container."
              },
              "temperatureMax": {
                "type": "number",
                "description": "Indicates the maximum temperature setting on the container."
              },
              "temperatureUnit": {
                "type": "string",
                "description": "Celsius (CEL) or Fahrenheit (FAH).",
                "enum": [
                  "CEL",
                  "FAH"
                ]
              },
              "humidityMin": {
                "type": "number",
                "description": "Indicates the minimum humidity setting on the container in percent."
              },
              "humidityMax": {
                "type": "number",
                "description": "Indicates the maximum humidity setting on the container in percent."
              },
              "ventilationMin": {
                "type": "number",
                "description": "Indicates the minimum ventilation setting on the container in CBM/Hr."
              },
              "ventilationMax": {
                "type": "number",
                "description": "Indicates the maximum ventilation setting on the container in CBM/Hr."
              }
            }
          },
          "seals": {
            "type": "array",
            "items": {
              "required": [
                "sealNumber",
                "sealType"
              ],
              "type": "object",
              "description": "addresses the seal-related information associated with the shipment equipment. A seal is put on a shipment equipment once it is loaded. This seal is meant to stay on until the shipment equipment reaches its final destination.",
              "properties": {
                "sealNumber": {
                  "maxLength": 15,
                  "type": "string",
                  "description": "Identifies a seal affixed to the container."
                },
                "sealSource": {
                  "type": "string",
                  "description": "The source of the seal, namely who has affixed the seal. This attribute links to the Seal Source ID defined in the Seal Source reference data entity.\n- CAR (Carrier)\n- SHI (Shipper)\n- PHY (Phytosanitary)\n- VET (Veterinary)\n- CUS (Customs)\n",
                  "enum": [
                    "CAR",
                    "SHI",
                    "PHY",
                    "VET",
                    "CUS"
                  ]
                },
                "sealType": {
                  "type": "string",
                  "description": "The type of seal. This attribute links to the Seal Type ID defined in the Seal Type reference data entity.\n- KLP (Keyless padlock)\n- BLT (Bolt)\n- WIR (Wire)\n",
                  "enum": [
                    "KLP",
                    "BLT",
                    "WIR"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "documentParties": {
      "type": "array",
      "items": {
        "required": [
          "isToBeNotified",
          "party",
          "partyFunction"
        ],
        "type": "object",
        "description": "stores the parties involved in the transport document.",
        "properties": {
          "party": {
            "required": [
              "partyContactDetails"
            ],
            "type": "object",
            "description": "refers to a company or a legal entity.",
            "properties": {
              "partyName": {
                "maxLength": 100,
                "type": "string",
                "description": "Name of the party."
              },
              "taxReference1": {
                "maxLength": 20,
                "type": "string",
                "description": "The identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
              },
              "taxReference2": {
                "maxLength": 20,
                "type": "string",
                "description": "Optional second identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
              },
              "publicKey": {
                "maxLength": 500,
                "type": "string",
                "description": "The public key used for a digital signature."
              },
              "address": {
                "type": "object",
                "description": "An object for storing address related information\n",
                "properties": {
                  "name": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Name of the address"
                  },
                  "street": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the street of the party’s address."
                  },
                  "streetNumber": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The number of the street of the party’s address."
                  },
                  "floor": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The floor of the party’s street number."
                  },
                  "postCode": {
                    "maxLength": 10,
                    "type": "string",
                    "description": "The post code of the party’s address."
                  },
                  "city": {
                    "maxLength": 65,
                    "type": "string",
                    "description": "The city name of the party’s address."
                  },
                  "stateRegion": {
                    "maxLength": 65,
                    "type": "string",
                    "description": "The state/region of the party’s address."
                  },
                  "country": {
                    "maxLength": 75,
                    "type": "string",
                    "description": "The country of the party’s address."
                  }
                }
              },
              "partyContactDetails": {
                "minItems": 1,
                "type": "array",
                "description": "A list of contact details - the list cannot be empty\n",
                "items": {
                  "required": [
                    "name"
                  ],
                  "type": "object",
                  "description": "Contact information for a Party\n",
                  "properties": {
                    "name": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Name of the contact"
                    },
                    "phone": {
                      "maxLength": 30,
                      "type": "string",
                      "description": "Phone number for the contact"
                    },
                    "email": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "E-mail address for the contact"
                    },
                    "url": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "URL for the contact"
                    }
                  }
                }
              },
              "identifyingCodes": {
                "type": "array",
                "items": {
                  "required": [
                    "DCSAResponsibleAgencyCode",
                    "partyCode"
                  ],
                  "type": "object",
                  "properties": {
                    "DCSAResponsibleAgencyCode": {
                      "type": "string",
                      "description": "A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:\n- ISO (International Standards Organization)\n- UNECE (United Nations Economic Commission for Europe)\n- LLOYD (Lloyd's register of shipping)\n- BIC (Bureau International des Containeurs)\n- IMO (International Maritime Organization)\n- SCAC (Standard Carrier Alpha Code)\n- ITIGG (International Transport Implementation Guidelines Group)\n- ITU (International Telecommunication Union)\n- SMDG (Shipplanning Message Development Group)\n- EXIS (Exis Technologies Ltd.)\n- FMC (Federal Maritime Commission)\n- CBSA (Canada Border Services Agency)\n- DCSA (Digital Container Shipping Association)\n- ZZZ (Mutually defined)\n\nMore details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/codelistresponsibleagencycodes.csv).\n",
                      "enum": [
                        "ISO",
                        "UNECE",
                        "LLOYD",
                        "BIC",
                        "IMO",
                        "SCAC",
                        "ITIGG",
                        "ITU",
                        "SMDG",
                        "EXIS",
                        "FMC",
                        "CBSA",
                        "DCSA",
                        "ZZZ"
                      ]
                    },
                    "partyCode": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Code to identify the party as provided by the agency\n"
                    },
                    "codeListName": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The name of the list, provided by the responsible agency\n"
                    }
                  }
                }
              }
            }
          },
          "partyFunction": {
            "type": "string",
            "description": "Specifies the role of the party in the context of the given Shipping Instruction.\n- OS (Original shipper)\n- CN (Consignee)\n- COW (Invoice payer on behalf of the consignor (shipper))\n- COX (Invoice payer on behalf of the consignee)\n- MS (Document/message issuer/sender)\n- N1 (First Notify Party)\n- N2 (Second Notify Party)\n- NI (Other Notify Party)\n- DDR (Consignor's freight forwarder)\n- DDS (Consignee's freight forwarder)\n- HE (Carrier booking office (transportation office))\n- SCO (Service contract owner - Defined by DCSA)\n- BA (Booking Agency)\n- EBL (EBL Solution Provider)\n",
            "enum": [
              "OS",
              "CN",
              "COW",
              "COX",
              "MS",
              "N1",
              "N2",
              "NI",
              "DDR",
              "DDS",
              "HE",
              "SCO",
              "BA",
              "EBL"
            ]
          },
          "displayedAddress": {
            "type": "array",
            "items": {
              "maxLength": 250,
              "type": "string",
              "description": "A single address line."
            }
          },
          "isToBeNotified": {
            "type": "boolean",
            "description": "Used to decide whether the party will be notified of the arrival of the cargo."
          }
        }
      }
    },
    "references": {
      "type": "array",
      "items": {
        "required": [
          "referenceType",
          "referenceValue"
        ],
        "type": "object",
        "description": "references provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.\n",
        "properties": {
          "referenceType": {
            "type": "string",
            "description": "The reference type codes defined by DCSA.\n- FF (Freight Forwarder’s Reference)\n- SI (Shipper’s Reference)\n- PO (Purchase Order Reference)\n- CR (Customer’s Reference)\n- AAO (Consignee’s Reference)\n- ECR (Empty container release reference)\n- CSI (Customer shipment ID)\n- BPR (Booking party reference number)\n- BID (Booking Request ID)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv\">GitHub</a>. Be aware that the list is a subset of the possible values.\n",
            "enum": [
              "FF",
              "SI",
              "PO",
              "CR",
              "AAO",
              "ECR",
              "CSI",
              "BPR",
              "BID"
            ]
          },
          "referenceValue": {
            "maxLength": 100,
            "type": "string",
            "description": "The actual value of the reference."
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-04/schema#"
}
